function addEvent(el, type, handler) {
    if (el.attachEvent) {
        el.attachEvent('on' + type, handler);
    } else {
        el.addEventListener(type, handler);
    }
}

function removeEvent(el, type, handler) {
    if (el.detachEvent) {
        el.detachEvent('on' + type, handler);
    } else {
        el.removeEventListener(type, handler);
    }
}

var ScrollReveal = function() {
    "use strict";
    
    // ... existing code ...

    // Replace all instances of addEventListener
    function t() {
        var n = this, i = { active: [], stale: [] }, t = { active: [], stale: [] }, r = { active: [], stale: [] };
        try {
            f(u("[data-sr-id]"), function(e) {
                var t = parseInt(e.getAttribute("data-sr-id"));
                i.active.push(t);
            });
        } catch (e) {
            throw e;
        }
        f(this.store.elements, function(e) {
            -1 === i.active.indexOf(e.id) && i.stale.push(e.id);
        });
        f(i.stale, function(e) {
            return delete n.store.elements[e];
        });
        f(this.store.elements, function(e) {
            -1 === r.active.indexOf(e.containerId) && r.active.push(e.containerId);
            e.hasOwnProperty("sequence") && -1 === t.active.indexOf(e.sequence.id) && t.active.push(e.sequence.id);
        });
        f(this.store.containers, function(e) {
            -1 === r.active.indexOf(e.id) && r.stale.push(e.id);
        });
        f(r.stale, function(e) {
            var t = n.store.containers[e].node;
            removeEvent(t, "scroll", n.delegate);
            removeEvent(t, "resize", n.delegate);
            delete n.store.containers[e];
        });
        f(this.store.sequences, function(e) {
            -1 === t.active.indexOf(e.id) && t.stale.push(e.id);
        });
        f(t.stale, function(e) {
            return delete n.store.sequences[e];
        });
    }

    // ... more existing code ...

    function w() {
        var n = this;
        t.call(this);
        f(this.store.elements, function(e) {
            var t = [e.styles.inline.generated];
            e.visible ? (t.push(e.styles.opacity.computed), t.push(e.styles.transform.generated.final), e.revealed = !0) :
                (t.push(e.styles.opacity.generated), t.push(e.styles.transform.generated.initial), e.revealed = !1);
            m(e.node, t.filter(function(e) {
                return "" !== e;
            }).join(" "));
        });
        f(this.store.containers, function(e) {
            var t = e.node === document.documentElement ? window : e.node;
            addEvent(t, "scroll", n.delegate);
            addEvent(t, "resize", n.delegate);
        });
        this.delegate();
        this.initTimeout = null;
    }

    // ... more existing code ...

    function i(e, a, t) {
        var c = this;
        void 0 === a && (a = {});
        void 0 === t && (t = !1);
        var l, d = [], n = a.interval || r.interval;
        try {
            n && (l = new E(n));
            var i = u(e);
            if (!i.length) throw new Error("Invalid reveal target.");
            f(i.reduce(function(e, t) {
                var n = {}, i = t.getAttribute("data-sr-id");
                i ? (v(n, c.store.elements[i]), m(n.node, n.styles.inline.computed)) : (n.id = b(), n.node = t, n.seen = !1, n.revealed = !1, n.visible = !1);
                var r = v({}, n.config || c.defaults, a);
                if (!r.mobile && g() || !r.desktop && !g()) return i && y.call(c, n), e;
                var o, s = u(r.container)[0];
                if (!s) throw new Error("Invalid container.");
                return s.contains(t) && (null === (o = function(t) {
                    var e = [], n = arguments.length - 1;
                    for (; 0 < n--;)
                        e[n] = arguments[n + 1];
                    var i = null;
                    return f(e, function(e) {
                        f(e, function(e) {
                            null === i && e.node === t && (i = e.id);
                        });
                    }), i;
                }(s, d, c.store.containers)) && (o = b(), d.push({ id: o, node: s })), n.config = r, n.containerId = o, n.styles = p(n), l && (n.sequence = { id: l.id, index: l.members.length }, l.members.push(n.id)), e.push(n)), e;
            }, []), function(e) {
                (c.store.elements[e.id] = e).node.setAttribute("data-sr-id", e.id);
            });
        } catch (e) {
            return h.call(this, "Reveal failed.", e.message);
        }
        f(d, function(e) {
            c.store.containers[e.id] = { id: e.id, node: e.node };
        });
        l && (this.store.sequences[l.id] = l);
        !0 !== t && (this.store.history.push({ target: e, options: a }), this.initTimeout && window.clearTimeout(this.initTimeout), this.initTimeout = window.setTimeout(w.bind(this), 0));
    }

    // ... more existing code ...

    function q(e, t) {
        var i = this;
        void 0 === e && (e = { type: "init" });
        void 0 === t && (t = this.store.elements);
        x(function() {
            var n = "init" === e.type || "resize" === e.type;
            f(i.store.containers, function(e) {
                n && (e.geometry = R.call(i, e, !0));
                var t = function(e) {
                    var t, n;
                    return n = e.node === document.documentElement ? (t = window.pageYOffset, window.pageXOffset) : (t = e.node.scrollTop, e.node.scrollLeft),
                        { top: t, left: n };
                }.call(i, e);
                e.scroll && (e.direction = { x: k(t.left - e.scroll.left), y: k(t.top - e.scroll.top) });
                e.scroll = t;
            });
            f(t, function(e) {
                (n || void 0 === e.geometry) && (e.geometry = R.call(i, e));
                e.visible = function(e) {
                    void 0 === e && (e = {});
                    var t = this.store.containers[e.containerId];
                    if (t) {
                        var n = Math.max(0, Math.min(1, e.config.viewFactor)), i = e.config.viewOffset, r = e.geometry.bounds.top + e.geometry.height * n,
                            o = e.geometry.bounds.right - e.geometry.width * n, s = e.geometry.bounds.bottom - e.geometry.height * n,
                            a = e.geometry.bounds.left + e.geometry.width * n, c = t.geometry.bounds.top + t.scroll.top + i.top,
                            l = t.geometry.bounds.right + t.scroll.left - i.right, d = t.geometry.bounds.bottom + t.scroll.top - i.bottom,
                            u = t.geometry.bounds.left + t.scroll.left + i.left;
                        return r < d && u < o && c < s && a < l || "fixed" === e.styles.position;
                    }
                }.call(i, e);
            });
            f(t, function(e) {
                e.sequence ? l.call(i, e) : c.call(i, e);
            });
            i.pristine = !1;
        });
    }

    var A, P, L, M, I, C, W, Y, $ = "4.0.9";

    function H(e) {
        var t;
        if (void 0 === e && (e = {}), void 0 === this || Object.getPrototypeOf(this) !== H.prototype)
            return new H(e);
        if (!H.isSupported())
            return h.call(this, "Instantiation failed.", "This browser is not supported."), n.failure();
        try {
            t = v({}, C || r, e);
        } catch (e) {
            return h.call(this, "Invalid configuration.", e.message), n.failure();
        }
        try {
            if (!u(t.container)[0])
                throw new Error("Invalid container.");
        } catch (e) {
            return h.call(this, e.message), n.failure();
        }
        return !t.mobile && g() || !t.desktop && !g() ? (h.call(this, "This device is disabled.", "desktop: " + t.desktop, "mobile: " + t.mobile), n.failure()) : (n.success(), this.store = { containers: {}, elements: {}, history: [], sequences: {} }, this.pristine = !0, this.delegate = function() {
            q.call(this);
        }.bind(this), this.destroy = function() {
            var e = this;
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            window.clearTimeout(this.initTimeout);
            this.initTimeout = null;
            f(this.store.history, function(e) {
                return y.call(e.target, { reset: !0 });
            });
            f(this.store.containers, function(t) {
                var n = t.node === document.documentElement ? window : t.node;
                removeEvent(n, "scroll", e.delegate);
                removeEvent(n, "resize", e.delegate);
            });
            this.store = { containers: {}, elements: {}, history: [], sequences: {} };
        }.bind(this), this.reveal = function(e, t, n) {
            i.call(this, e, t, n);
            return this;
        }.bind(this), this.sync = function() {
            t.call(this);
            f(this.store.elements, function(e) {
                m(e.node, e.styles.inline.generated);
            });
            this.delegate();
            return this;
        }.bind(this), x(function() {
            addEvent(t.container === document.documentElement ? window : t.container, "scroll", this.delegate);
            addEvent(t.container === document.documentElement ? window : t.container, "resize", this.delegate);
            this.sync();
        }.bind(this)), this);
    }

    return H.isSupported = function() {
        return "transform" in document.documentElement.style && "transition" in document.documentElement.style;
    }, Object.defineProperty(H, "debug", {
        get: function() {
            return M || !1;
        },
        set: function(e) {
            return M = "boolean" == typeof e ? e : M;
        }
    }), Object.defineProperty(H, "version", {
        get: function() {
            return $;
        }
    }), H();
};

// Example usage of ScrollReveal
var sr = ScrollReveal();
sr.reveal('.foo');
